{
  "name": "Overwatch Script To Workshop",
  "scopeName": "source.del",
  "fileTypes": [
    "del",
    "ostw",
    "workshop"
  ],
  "$schema": "https://raw.githubusercontent.com/Septh/tmlanguage/master/tmLanguage.schema.json",
  "patterns": [
    {
      "include": "#rule-set"
    }
  ],
  "repository": {
    "rule-set": {
      "patterns": [
        {
          "include": "#rule"
        },
        {
          "include": "#declare-variable"
        },
        {
          "include": "#declare-function"
        }
      ]
    },
    "declare-variable": {
      "begin": "((define)|([_[:alnum:]]+))\\b\\s*([_[:alnum:]]+)\\s*(=)?(?!\\s*\\()",
      "end": ";",
      "patterns": [
        {
          "include": "#expression"
        }
      ],
      "beginCaptures": {
        "2": {
          "name": "keyword.other"
        },
        "3": {
          "name": "entity.name.type"
        },
        "4": {
          "name": "variable"
        },
        "5": {
          "name": "keyword.operator.assignment.ostw"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.terminator.statement.ostw"
        }
      }
    },
    "declare-function": {
      "begin": "((public|private|protected|virtual|override|abstract|static)\\s+)*((define)|([_[:alnum:]]+))\\b\\s*([_[:alnum:]]+)",
      "end": "(?<=})|(?<=;)",
      "beginCaptures": {
        "2": {
          "name": "storage.modifier"
        },
        "4": {
          "name": "keyword.other"
        },
        "5": {
          "name": "entity.name.type"
        },
        "6": {
          "name": "entity.name.function"
        },
        "7": {
          "name": "punctuation.parenthesis.open"
        }
      },
      "patterns": [
        {
          "include": "#parameter-list-declaration"
        }
      ]
    },
    "parameter-list-declaration": {
      "begin": "\\(",
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.parenthesis.close"
        }
      },
      "patterns": [
        {
          "include": "#parameter-declaration"
        }
      ]
    },
    "parameter-declaration": {
      "match": "(ref\\s+)?((define)|([_[:alnum:]]+))\\b\\s*([_[:alnum:]]+)",
      "captures": {
        "1": {
          "name": "storage.modifier"
        },
        "3": {
          "name": "keyword.other"
        },
        "4": {
          "name": "entity.name.type"
        },
        "5": {
          "name": "variable.parameter"
        }
      }
    },
    "rule": {
      "begin": "(rule)\\s*(:)\\s*(\".*?\")",
      "end": "(?<=})|(?<=;)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control"
        },
        "2": {
          "name": "punctuation.separator.colon"
        },
        "3": {
          "name": "string.quoted.double"
        }
      },
      "patterns": [
        {
          "match": "(Event|Team|Player)\\s*(\\.)\\s*([_[:alnum:]]+)",
          "captures": {
            "1": {
              "name": "support.type"
            },
            "2": {
              "name": "punctuation.accessor"
            },
            "3": {
              "name": "support.variable"
            }
          }
        },
        {
          "begin": "(if)\\s*(\\()",
          "end": "\\)",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.conditional.if"
            },
            "2": {
              "name": "punctuation.parenthesis.open"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.parenthesis.close"
            }
          },
          "patterns": [
            {
              "include": "#expression"
            }
          ]
        },
        {
          "include": "#block"
        }
      ]
    },
    "block": {
      "begin": "{",
      "end": "}"
    },
    "expression": {
      "patterns": [
        {
          "include": "#number"
        }
      ]
    },
    "number": {
      "patterns": [
        {
          "match": "\\b-?[0-9]+(\\.[0-9]+)?\\b",
          "name": "constant.numeric"
        }
      ]
    }
  }
}